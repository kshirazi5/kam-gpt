"""Streamlit entry point for the Kam-GPT conversational portfolio.\n\nfrom __future__ import annotations\n\nimport os\nimport streamlit as st\nfrom openai_helper import setup_openai, generate_chat_response\n\n# Page configuration\nst.set_page_config(\n    page_title="Kam-GPT",\n    page_icon="ðŸ¤–",\n    layout="wide",\n    menu_items={\n        "Report a bug": "mailto:kamran@example.com",\n        "About": "Kam-GPT is an AI guide to Kamran Shirazi's experience.",\n    },\n)\n\n# Initialize OpenAI\nif 'OPENAI_API_KEY' not in st.secrets:\n    st.error('Please set your OpenAI API key in the app secrets.')\n    st.stop()\nsetup_openai(st.secrets['OPENAI_API_KEY'])\n\n# System prompt to guide GPT-4.1's responses\nSYSTEM_PROMPT = """You are Kam-GPT, an AI assistant representing Kamran Shirazi. \nYour role is to provide information about Kamran's experience, skills, and background.\n\nKey information about Kamran:\n- Senior machine learning engineer based in Toronto, Canada\n- Over 6 years of experience in data platforms and MLOps\n- Specializes in applied AI and ML automation\n- Works remotely and collaborates across time zones\n- Contact: kamran@example.com\n\nMaintain a professional, friendly tone and provide specific, relevant information about Kamran's experience and capabilities."""\n\ndef render_sidebar() -> None:\n    """Render supporting information and controls in the sidebar."""\n    with st.sidebar:\n        st.header("Meet Kamran ðŸ‘‹")\n        st.markdown(\n            """\n            **Role:** Senior machine learning engineer \\n            **Specialities:** Data platforms, MLOps, applied AI \\n            **Based in:** Toronto, Canada\n            """\n        )\n        st.caption("Curious what Kamran has worked on? Ask away in the chat!")\n        \n        if st.button("Reset conversation"):\n            st.session_state.messages = []\n            st.experimental_rerun()\n\ndef render_chat_interface() -> None:\n    """Render the conversational UI powered by GPT-4.1."""\n    st.title("Kam-GPT")\n    st.subheader("Your AI guide to Kamran Shirazi")\n    st.write(\n        "Use the chat below to learn about Kamran's experience, favourite projects, and how "\n        "he collaborates on AI initiatives."\n    )\n\n    # Initialize chat history\n    if "messages" not in st.session_state:\n        st.session_state.messages = []\n        # Add initial greeting\n        response = generate_chat_response(\n            [{"role": "user", "content": "Introduce yourself briefly"}],\n            SYSTEM_PROMPT\n        )\n        st.session_state.messages.append({"role": "assistant", "content": response})\n\n    # Display chat history\n    for message in st.session_state.messages:\n        with st.chat_message(message["role"]):\n            st.markdown(message["content"])\n\n    # Handle user input\n    if prompt := st.chat_input("Ask about Kamran's expertise"):\n        # Display user message\n        with st.chat_message("user"):\n            st.markdown(prompt)\n        st.session_state.messages.append({"role": "user", "content": prompt})\n        \n        # Generate and display assistant response\n        with st.chat_message("assistant"):\n            messages = [{"role": m["role"], "content": m["content"]}  \n                      for m in st.session_state.messages]\n            response = generate_chat_response(messages, SYSTEM_PROMPT)\n            st.markdown(response)\n        st.session_state.messages.append({"role": "assistant", "content": response})\n\ndef main() -> None:\n    """Application entry point."""\n    render_sidebar()\n    render_chat_interface()\n\nif __name__ == "__main__":\n    main()\n"